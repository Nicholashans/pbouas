/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pos.application;

import java.sql.Statement;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import javax.swing.table.DefaultTableModel;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author chris
 */
public class uploadBarang extends javax.swing.JFrame {

    DefaultTableModel dm;
    
    /**
     * Creates new form uploadBarang
     */
    public uploadBarang() {
        DBConnector.initDBConnection();
        initComponents();
        dm = new DefaultTableModel();
        dm = (DefaultTableModel) daftarBarangTable.getModel();
        createColumns();
        int kode;
        String nama, exp, item_type;
        float harga;
        try {
            Statement stmt = DBConnector.connection.createStatement();
            String sql = "select * from barang";
            ResultSet rs = stmt.executeQuery(sql);

            while(rs.next()){
                NumberFormat formatter = new DecimalFormat("#,###,###");
                kode = rs.getInt("kode");
                nama = rs.getString("nama");
                harga = rs.getFloat("harga");
                exp = rs.getString("exp_date");
                item_type = rs.getString("item_type");
                
                String hargaFormat = formatter.format(harga);
                populate(kode, nama, hargaFormat, exp, item_type);  
            }            
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }
    
    private void createColumns(){
        dm = (DefaultTableModel) daftarBarangTable.getModel();      
        dm.addColumn("Kode");
        dm.addColumn("Nama");
        dm.addColumn("Harga");
        dm.addColumn("Expired Date");
        dm.addColumn("Item Type");
    }
    
    private void populate(int kode, String nama, String harga, String exp, String item_type){
        dm = (DefaultTableModel) daftarBarangTable.getModel();
        
        String[] rowData = {Integer.toString(kode), nama, harga, exp, item_type};
        
        dm.addRow(rowData);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        namaBarangTextField = new javax.swing.JTextField();
        hargaTextField = new javax.swing.JTextField();
        uploadBTN = new javax.swing.JButton();
        backBTN = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        daftarBarangTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jenisItemCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(26, 69, 224));
        jPanel1.setForeground(new java.awt.Color(33, 158, 188));

        jLabel1.setFont(new java.awt.Font("Montserrat Medium", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nama Barang");

        jLabel2.setFont(new java.awt.Font("Montserrat Medium", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Harga");

        namaBarangTextField.setBackground(new java.awt.Color(255, 255, 255));
        namaBarangTextField.setForeground(new java.awt.Color(0, 0, 0));
        namaBarangTextField.setActionCommand("<Not Set>");

        hargaTextField.setBackground(new java.awt.Color(255, 255, 255));
        hargaTextField.setForeground(new java.awt.Color(0, 0, 0));

        uploadBTN.setBackground(new java.awt.Color(255, 255, 255));
        uploadBTN.setForeground(new java.awt.Color(0, 0, 0));
        uploadBTN.setText("Upload");
        uploadBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadBTNActionPerformed(evt);
            }
        });

        backBTN.setBackground(new java.awt.Color(255, 255, 255));
        backBTN.setForeground(new java.awt.Color(0, 0, 0));
        backBTN.setText("Back to admin page");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        daftarBarangTable.setBackground(new java.awt.Color(255, 255, 255));
        daftarBarangTable.setForeground(new java.awt.Color(0, 0, 0));
        daftarBarangTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(daftarBarangTable);

        jLabel3.setFont(new java.awt.Font("Montserrat ExtraBold", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("DAFTAR PRODUK");

        jLabel4.setFont(new java.awt.Font("Montserrat ExtraBold", 0, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("INPUT PAGE");

        jLabel5.setFont(new java.awt.Font("Montserrat Medium", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Pilih jenis barang/item");

        jenisItemCombo.setBackground(new java.awt.Color(255, 255, 255));
        jenisItemCombo.setForeground(new java.awt.Color(0, 0, 0));
        jenisItemCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Makanan", "Pulsa", "Token" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5))
                                .addGap(66, 66, 66)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(namaBarangTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                                    .addComponent(hargaTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                                    .addComponent(jenisItemCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(uploadBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(backBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(namaBarangTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(hargaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jenisItemCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(uploadBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(backBTN))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void uploadBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadBTNActionPerformed
        String namaBarang = namaBarangTextField.getText();
        String hargaBarang = hargaTextField.getText();
        var tipeBarang = jenisItemCombo.getSelectedItem();
        
        //expired date
        LocalDateTime now = LocalDateTime.now();
        LocalDateTime futureTime = now.plusYears(2);
        DateTimeFormatter dtFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String expDate = futureTime.format(dtFormatter);
        System.out.println(expDate);
        
        if(tipeBarang.equals("Makanan")){
            try {
                Statement stmt = DBConnector.connection.createStatement();
                String sql = "INSERT INTO barang(nama, harga, exp_date, item_type) VALUES ('"+namaBarang+"','"+hargaBarang+"','"+expDate+"','makanan')";
                stmt.execute(sql);            
            } catch (Exception ex) {
                System.out.println(ex);
            }
        }
        else if(tipeBarang.equals("Pulsa")){
            try {
                Statement stmt = DBConnector.connection.createStatement();
                String sql = "INSERT INTO barang(nama, harga, item_type) VALUES ('"+namaBarang+"','"+hargaBarang+"','pulsa')";
                stmt.execute(sql);            
            } catch (Exception ex) {
                System.out.println(ex);
            }
        }
        else if(tipeBarang.equals("Token")){
            try {
                Statement stmt = DBConnector.connection.createStatement();
                String sql = "INSERT INTO barang(nama, harga, item_type) VALUES ('"+namaBarang+"','"+hargaBarang+"','token')";
                stmt.execute(sql);            
            } catch (Exception ex) {
                System.out.println(ex);
            }
        }
     
        //reload the table
        dm.setRowCount(0);
        int kode;
        String nama, exp, item_type;
        float harga;
        try {
            Statement stmt = DBConnector.connection.createStatement();
            String sql = "select * from barang";
            ResultSet rs = stmt.executeQuery(sql);

            while(rs.next()){
                NumberFormat formatter = new DecimalFormat("#,###,###");
                kode = rs.getInt("kode");
                nama = rs.getString("nama");
                harga = rs.getFloat("harga");
                exp = rs.getString("exp_date");
                item_type = rs.getString("item_type");
                
                String hargaFormat = formatter.format(harga);
                populate(kode, nama, hargaFormat, exp, item_type);  
            }            
        } catch (Exception ex) {
            System.out.println(ex);
        }
        
        namaBarangTextField.setText(null);
        hargaTextField.setText(null);
        
//        JOptionPane.showMessageDialog(null, "Upload Barang berhasil!", "Caution!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_uploadBTNActionPerformed

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        this.dispose();
        new adminPage().setVisible(true);
    }//GEN-LAST:event_backBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(uploadBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(uploadBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(uploadBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(uploadBarang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new uploadBarang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBTN;
    private javax.swing.JTable daftarBarangTable;
    private javax.swing.JTextField hargaTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jenisItemCombo;
    private javax.swing.JTextField namaBarangTextField;
    private javax.swing.JButton uploadBTN;
    // End of variables declaration//GEN-END:variables
}
